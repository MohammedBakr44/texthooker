{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../src/component-stack.js","webpack:///../src/debug.js","webpack:///../src/index.js","webpack:///../src/devtools.js","webpack:///../src/check-props.js","webpack:///../src/constants.js","webpack:///../src/util.js","webpack:///./components/settings.jsx","webpack:///./index.js","webpack:///./app.jsx","webpack:///../src/create-element.js","webpack:///../src/component.js","webpack:///../src/diff/children.js","webpack:///../src/diff/props.js","webpack:///../src/diff/index.js","webpack:///../src/render.js","webpack:///../src/options.js","webpack:///../src/diff/catch-error.js","webpack:///../node_modules/preact-cli/lib/lib/entry.js"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getDisplayName","vnode","type","Fragment","displayName","getCurrentVNode","renderStack","length","isPossibleOwner","getOwnerStack","stack","next","push","reduce","acc","owner","source","__source","fileName","lineNumber","hasBabelPlugin","console","warn","serializeVNode","props","attrs","prop","toString","JSON","stringify","children","getHookState","index","options","currentComponent","currentHook","hooks","useState","initialState","reducer","init","hookState","currentIndex","_reducer","invokeOrReturn","nextValue","action","setState","useReducer","useEffect","callback","args","state","argsChanged","flushAfterPaintEffects","afterPaintEffects","forEach","component","invokeCleanup","invokeEffect","e","hook","comp","oldArgs","newArgs","some","arg","f","window","__PREACT_DEVTOOLS__","attachPreact","Component","loggedTypeFailures","ownerStack","isWeakMapSupported","WeakMap","update","this","forceUpdate","oldDiff","oldDiffed","diffed","oldRoot","oldVNode","oldRender","pop","parent","setupComponentStack","hooksAllowed","oldBeforeDiff","oldVnode","oldCatchError","oldHook","warnedComponents","useLayoutEffect","lazyPropTypes","deprecations","error","then","promise","Error","setTimeout","parentNode","isValid","nodeType","componentName","parentVNode","getClosestDomNodeParent","Array","isArray","ref","propTypes","has","lazyVNode","set","values","obj","typeSpecs","location","getStack","keys","typeSpecName","message","indexOf","deprecatedAttributes","nodeName","attributes","deprecatedProto","newProps","v","__self","__proto__","child","join","prevRaf","oldBeforeRender","oldAfterDiff","oldCommit","oldBeforeUnmount","unmount","requestAnimationFrame","raf","done","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","commitQueue","filter","cb","Settings","bg","setBg","colour","setColour","font","fontSize","localBg","localStorage","getItem","localColour","localFont","document","body","style","backgroundColor","color","querySelector","className","isOpen","onChange","target","handleBg","handleFontSize","handleColour","onClick","preventDefault","setItem","clear","App","charCount","setCharCount","lineCount","setLineCount","setData","open","toggle","text","lines","linesData","parse","container","log","loadLines","MutationObserver","mutations","mutation","_lines","addedNodes","innerText","updateData","sessionStorage","count","scroll","observe","childList","removeLastElementArray","arr","split","line","createElement","createTextNode","chars","appendChild","data","b","offset","scrollHeight","offsetHeight","scrollTop","clientHeight","scrollTo","lastP","from","querySelectorAll","remove","assign","removeNode","node","removeChild","normalizedProps","arguments","defaultProps","createVNode","original","undefined","constructor","context","getDomSibling","childIndex","sibling","updateParentDomPointers","base","enqueueRender","rerenderQueue","process","prevDebounce","debounceRendering","defer","queue","sort","a","oldDom","parentDom","diff","ownerSVGElement","commitRoot","diffChildren","renderResult","newParentVNode","oldParentVNode","globalContext","isSvg","excessDomChildren","isHydrating","j","childVNode","newDom","firstChildDom","refs","oldChildren","EMPTY_ARR","oldChildrenLength","EMPTY_OBJ","reorderChildren","placeChild","applyRef","tmp","nextDom","sibDom","outer","nextSibling","insertBefore","setStyle","setProperty","IS_NON_DIMENSIONAL","test","dom","oldValue","useCapture","cssText","replace","toLowerCase","slice","_listeners","addEventListener","eventProxyCapture","eventProxy","removeEventListener","setAttribute","removeAttribute","event","newVNode","isNew","oldProps","oldState","snapshot","clearProcessingException","provider","componentContext","newType","contextType","render","doRender","sub","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","diffElementNodes","root","oldHtml","newHtml","localName","createElementNS","is","childNodes","dangerouslySetInnerHTML","innerHTML","hydrate","diffProps","firstChild","checked","current","skipRemove","componentWillUnmount","replaceNode","ctor","handled","getDerivedStateFromError","componentDidCatch","Promise","resolve","h","Preact","interopDefault","default","normalizeURL","url","navigator","serviceWorker","register","__webpack_public_path__","require","getElementById","firstElementChild","app","preRenderData","inlineDataElement","decodeURI","CLI_DATA","currentURL","canHydrate","pathname"],"mappings":"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","file":"bundle.8fc34.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"mdyV\");\n","import { options, Fragment } from 'preact';\n\n/**\n * Get human readable name of the component/dom node\n * @param {import('./internal').VNode} vnode\n * @param {import('./internal').VNode} vnode\n * @returns {string}\n */\nexport function getDisplayName(vnode) {\n\tif (vnode.type === Fragment) {\n\t\treturn 'Fragment';\n\t} else if (typeof vnode.type == 'function') {\n\t\treturn vnode.type.displayName || vnode.type.name;\n\t} else if (typeof vnode.type == 'string') {\n\t\treturn vnode.type;\n\t}\n\n\treturn '#text';\n}\n\n/**\n * Used to keep track of the currently rendered `vnode` and print it\n * in debug messages.\n */\nlet renderStack = [];\n\n/**\n * Keep track of the current owners. An owner describes a component\n * which was responsible to render a specific `vnode`. This exclude\n * children that are passed via `props.children`, because they belong\n * to the parent owner.\n *\n * ```jsx\n * const Foo = props => <div>{props.children}</div> // div's owner is Foo\n * const Bar = props => {\n *   return (\n *     <Foo><span /></Foo> // Foo's owner is Bar, span's owner is Bar\n *   )\n * }\n * ```\n *\n * Note: A `vnode` may be hoisted to the root scope due to compiler\n * optimiztions. In these cases the `_owner` will be different.\n */\nlet ownerStack = [];\n\n/**\n * Get the currently rendered `vnode`\n * @returns {import('./internal').VNode | null}\n */\nexport function getCurrentVNode() {\n\treturn renderStack.length > 0 ? renderStack[renderStack.length - 1] : null;\n}\n\n/**\n * If the user doesn't have `@babel/plugin-transform-react-jsx-source`\n * somewhere in his tool chain we can't print the filename and source\n * location of a component. In that case we just omit that, but we'll\n * print a helpful message to the console, notifying the user of it.\n */\nlet hasBabelPlugin = false;\n\n/**\n * Check if a `vnode` is a possible owner.\n * @param {import('./internal').VNode} vnode\n */\nfunction isPossibleOwner(vnode) {\n\treturn typeof vnode.type == 'function' && vnode.type != Fragment;\n}\n\n/**\n * Return the component stack that was captured up to this point.\n * @param {import('./internal').VNode} vnode\n * @returns {string}\n */\nexport function getOwnerStack(vnode) {\n\tconst stack = [vnode];\n\tlet next = vnode;\n\twhile (next._owner != null) {\n\t\tstack.push(next._owner);\n\t\tnext = next._owner;\n\t}\n\n\treturn stack.reduce((acc, owner) => {\n\t\tacc += `  in ${getDisplayName(owner)}`;\n\n\t\tconst source = owner.__source;\n\t\tif (source) {\n\t\t\tacc += ` (at ${source.fileName}:${source.lineNumber})`;\n\t\t} else if (!hasBabelPlugin) {\n\t\t\thasBabelPlugin = true;\n\t\t\tconsole.warn(\n\t\t\t\t'Add @babel/plugin-transform-react-jsx-source to get a more detailed component stack. Note that you should not add it to production builds of your App for bundle size reasons.'\n\t\t\t);\n\t\t}\n\n\t\treturn (acc += '\\n');\n\t}, '');\n}\n\n/**\n * Setup code to capture the component trace while rendering. Note that\n * we cannot simply traverse `vnode._parent` upwards, because we have some\n * debug messages for `this.setState` where the `vnode` is `undefined`.\n */\nexport function setupComponentStack() {\n\tlet oldDiff = options._diff;\n\tlet oldDiffed = options.diffed;\n\tlet oldRoot = options._root;\n\tlet oldVNode = options.vnode;\n\tlet oldRender = options._render;\n\n\toptions.diffed = vnode => {\n\t\tif (isPossibleOwner(vnode)) {\n\t\t\townerStack.pop();\n\t\t}\n\t\trenderStack.pop();\n\t\tif (oldDiffed) oldDiffed(vnode);\n\t};\n\n\toptions._diff = vnode => {\n\t\tif (isPossibleOwner(vnode)) {\n\t\t\trenderStack.push(vnode);\n\t\t}\n\t\tif (oldDiff) oldDiff(vnode);\n\t};\n\n\toptions._root = (vnode, parent) => {\n\t\townerStack = [];\n\t\tif (oldRoot) oldRoot(vnode, parent);\n\t};\n\n\toptions.vnode = vnode => {\n\t\tvnode._owner =\n\t\t\townerStack.length > 0 ? ownerStack[ownerStack.length - 1] : null;\n\t\tif (oldVNode) oldVNode(vnode);\n\t};\n\n\toptions._render = vnode => {\n\t\tif (isPossibleOwner(vnode)) {\n\t\t\townerStack.push(vnode);\n\t\t}\n\n\t\tif (oldRender) oldRender(vnode);\n\t};\n}\n","import { checkPropTypes } from './check-props';\nimport { options, Component } from 'preact';\nimport {\n\tELEMENT_NODE,\n\tDOCUMENT_NODE,\n\tDOCUMENT_FRAGMENT_NODE\n} from './constants';\nimport {\n\tgetOwnerStack,\n\tsetupComponentStack,\n\tgetCurrentVNode,\n\tgetDisplayName\n} from './component-stack';\nimport { assign } from './util';\n\nconst isWeakMapSupported = typeof WeakMap == 'function';\n\nfunction getClosestDomNodeParent(parent) {\n\tif (!parent) return {};\n\tif (typeof parent.type == 'function') {\n\t\treturn getClosestDomNodeParent(parent._parent);\n\t}\n\treturn parent;\n}\n\nexport function initDebug() {\n\tsetupComponentStack();\n\n\tlet hooksAllowed = false;\n\n\t/* eslint-disable no-console */\n\tlet oldBeforeDiff = options._diff;\n\tlet oldDiffed = options.diffed;\n\tlet oldVnode = options.vnode;\n\tlet oldCatchError = options._catchError;\n\tlet oldRoot = options._root;\n\tlet oldHook = options._hook;\n\tconst warnedComponents = !isWeakMapSupported\n\t\t? null\n\t\t: {\n\t\t\t\tuseEffect: new WeakMap(),\n\t\t\t\tuseLayoutEffect: new WeakMap(),\n\t\t\t\tlazyPropTypes: new WeakMap()\n\t\t  };\n\tconst deprecations = [];\n\n\toptions._catchError = (error, vnode, oldVNode) => {\n\t\tlet component = vnode && vnode._component;\n\t\tif (component && typeof error.then == 'function') {\n\t\t\tconst promise = error;\n\t\t\terror = new Error(\n\t\t\t\t`Missing Suspense. The throwing component was: ${getDisplayName(vnode)}`\n\t\t\t);\n\n\t\t\tlet parent = vnode;\n\t\t\tfor (; parent; parent = parent._parent) {\n\t\t\t\tif (parent._component && parent._component._childDidSuspend) {\n\t\t\t\t\terror = promise;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// We haven't recovered and we know at this point that there is no\n\t\t\t// Suspense component higher up in the tree\n\t\t\tif (error instanceof Error) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\toldCatchError(error, vnode, oldVNode);\n\n\t\t\t// when an error was handled by an ErrorBoundary we will nontheless emit an error\n\t\t\t// event on the window object. This is to make up for react compatibility in dev mode\n\t\t\t// and thus make the Next.js dev overlay work.\n\t\t\tif (typeof error.then != 'function') {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthrow e;\n\t\t}\n\t};\n\n\toptions._root = (vnode, parentNode) => {\n\t\tif (!parentNode) {\n\t\t\tthrow new Error(\n\t\t\t\t'Undefined parent passed to render(), this is the second argument.\\n' +\n\t\t\t\t\t'Check if the element is available in the DOM/has the correct id.'\n\t\t\t);\n\t\t}\n\n\t\tlet isValid;\n\t\tswitch (parentNode.nodeType) {\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\tcase DOCUMENT_NODE:\n\t\t\t\tisValid = true;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tisValid = false;\n\t\t}\n\n\t\tif (!isValid) {\n\t\t\tlet componentName = getDisplayName(vnode);\n\t\t\tthrow new Error(\n\t\t\t\t`Expected a valid HTML node as a second argument to render.\tReceived ${parentNode} instead: render(<${componentName} />, ${parentNode});`\n\t\t\t);\n\t\t}\n\n\t\tif (oldRoot) oldRoot(vnode, parentNode);\n\t};\n\n\toptions._diff = vnode => {\n\t\tlet { type, _parent: parent } = vnode;\n\t\tlet parentVNode = getClosestDomNodeParent(parent);\n\n\t\thooksAllowed = true;\n\n\t\tif (type === undefined) {\n\t\t\tthrow new Error(\n\t\t\t\t'Undefined component passed to createElement()\\n\\n' +\n\t\t\t\t\t'You likely forgot to export your component or might have mixed up default and named imports' +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t} else if (type != null && typeof type == 'object') {\n\t\t\tif (type._children !== undefined && type._dom !== undefined) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Invalid type passed to createElement(): ${type}\\n\\n` +\n\t\t\t\t\t\t'Did you accidentally pass a JSX literal as JSX twice?\\n\\n' +\n\t\t\t\t\t\t`  let My${getDisplayName(vnode)} = ${serializeVNode(type)};\\n` +\n\t\t\t\t\t\t`  let vnode = <My${getDisplayName(vnode)} />;\\n\\n` +\n\t\t\t\t\t\t'This usually happens when you export a JSX literal and not the component.' +\n\t\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthrow new Error(\n\t\t\t\t'Invalid type passed to createElement(): ' +\n\t\t\t\t\t(Array.isArray(type) ? 'array' : type)\n\t\t\t);\n\t\t}\n\n\t\tif (\n\t\t\t(type === 'thead' || type === 'tfoot' || type === 'tbody') &&\n\t\t\tparentVNode.type !== 'table'\n\t\t) {\n\t\t\tconsole.error(\n\t\t\t\t'Improper nesting of table. Your <thead/tbody/tfoot> should have a <table> parent.' +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t} else if (\n\t\t\ttype === 'tr' &&\n\t\t\tparentVNode.type !== 'thead' &&\n\t\t\tparentVNode.type !== 'tfoot' &&\n\t\t\tparentVNode.type !== 'tbody' &&\n\t\t\tparentVNode.type !== 'table'\n\t\t) {\n\t\t\tconsole.error(\n\t\t\t\t'Improper nesting of table. Your <tr> should have a <thead/tbody/tfoot/table> parent.' +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t} else if (type === 'td' && parentVNode.type !== 'tr') {\n\t\t\tconsole.error(\n\t\t\t\t'Improper nesting of table. Your <td> should have a <tr> parent.' +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t} else if (type === 'th' && parentVNode.type !== 'tr') {\n\t\t\tconsole.error(\n\t\t\t\t'Improper nesting of table. Your <th> should have a <tr>.' +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t}\n\n\t\tif (\n\t\t\tvnode.ref !== undefined &&\n\t\t\ttypeof vnode.ref != 'function' &&\n\t\t\ttypeof vnode.ref != 'object' &&\n\t\t\t!('$$typeof' in vnode) // allow string refs when preact-compat is installed\n\t\t) {\n\t\t\tthrow new Error(\n\t\t\t\t`Component's \"ref\" property should be a function, or an object created ` +\n\t\t\t\t\t`by createRef(), but got [${typeof vnode.ref}] instead\\n` +\n\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t);\n\t\t}\n\n\t\tif (typeof vnode.type == 'string') {\n\t\t\tfor (const key in vnode.props) {\n\t\t\t\tif (\n\t\t\t\t\tkey[0] === 'o' &&\n\t\t\t\t\tkey[1] === 'n' &&\n\t\t\t\t\ttypeof vnode.props[key] != 'function' &&\n\t\t\t\t\tvnode.props[key] != null\n\t\t\t\t) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Component's \"${key}\" property should be a function, ` +\n\t\t\t\t\t\t\t`but got [${typeof vnode.props[key]}] instead\\n` +\n\t\t\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Check prop-types if available\n\t\tif (typeof vnode.type == 'function' && vnode.type.propTypes) {\n\t\t\tif (\n\t\t\t\tvnode.type.displayName === 'Lazy' &&\n\t\t\t\twarnedComponents &&\n\t\t\t\t!warnedComponents.lazyPropTypes.has(vnode.type)\n\t\t\t) {\n\t\t\t\tconst m =\n\t\t\t\t\t'PropTypes are not supported on lazy(). Use propTypes on the wrapped component itself. ';\n\t\t\t\ttry {\n\t\t\t\t\tconst lazyVNode = vnode.type();\n\t\t\t\t\twarnedComponents.lazyPropTypes.set(vnode.type, true);\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\tm + `Component wrapped in lazy() is ${getDisplayName(lazyVNode)}`\n\t\t\t\t\t);\n\t\t\t\t} catch (promise) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\tm + \"We will log the wrapped component's name once it is loaded.\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet values = vnode.props;\n\t\t\tif (vnode.type._forwarded) {\n\t\t\t\tvalues = assign({}, values);\n\t\t\t\tdelete values.ref;\n\t\t\t}\n\n\t\t\tcheckPropTypes(\n\t\t\t\tvnode.type.propTypes,\n\t\t\t\tvalues,\n\t\t\t\t'prop',\n\t\t\t\tgetDisplayName(vnode),\n\t\t\t\t() => getOwnerStack(vnode)\n\t\t\t);\n\t\t}\n\n\t\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n\t};\n\n\toptions._hook = (comp, index, type) => {\n\t\tif (!comp || !hooksAllowed) {\n\t\t\tthrow new Error('Hook can only be invoked from render methods.');\n\t\t}\n\n\t\tif (oldHook) oldHook(comp, index, type);\n\t};\n\n\t// Ideally we'd want to print a warning once per component, but we\n\t// don't have access to the vnode that triggered it here. As a\n\t// compromise and to avoid flooding the console with warnings we\n\t// print each deprecation warning only once.\n\tconst warn = (property, message) => ({\n\t\tget() {\n\t\t\tconst key = 'get' + property + message;\n\t\t\tif (deprecations && deprecations.indexOf(key) < 0) {\n\t\t\t\tdeprecations.push(key);\n\t\t\t\tconsole.warn(`getting vnode.${property} is deprecated, ${message}`);\n\t\t\t}\n\t\t},\n\t\tset() {\n\t\t\tconst key = 'set' + property + message;\n\t\t\tif (deprecations && deprecations.indexOf(key) < 0) {\n\t\t\t\tdeprecations.push(key);\n\t\t\t\tconsole.warn(`setting vnode.${property} is not allowed, ${message}`);\n\t\t\t}\n\t\t}\n\t});\n\n\tconst deprecatedAttributes = {\n\t\tnodeName: warn('nodeName', 'use vnode.type'),\n\t\tattributes: warn('attributes', 'use vnode.props'),\n\t\tchildren: warn('children', 'use vnode.props.children')\n\t};\n\n\tconst deprecatedProto = Object.create({}, deprecatedAttributes);\n\n\toptions.vnode = vnode => {\n\t\tconst props = vnode.props;\n\t\tif (\n\t\t\tvnode.type !== null &&\n\t\t\tprops != null &&\n\t\t\t('__source' in props || '__self' in props)\n\t\t) {\n\t\t\tconst newProps = (vnode.props = {});\n\t\t\tfor (let i in props) {\n\t\t\t\tconst v = props[i];\n\t\t\t\tif (i === '__source') vnode.__source = v;\n\t\t\t\telse if (i === '__self') vnode.__self = v;\n\t\t\t\telse newProps[i] = v;\n\t\t\t}\n\t\t}\n\n\t\t// eslint-disable-next-line\n\t\tvnode.__proto__ = deprecatedProto;\n\t\tif (oldVnode) oldVnode(vnode);\n\t};\n\n\toptions.diffed = vnode => {\n\t\t// Check if the user passed plain objects as children. Note that we cannot\n\t\t// move this check into `options.vnode` because components can receive\n\t\t// children in any shape they want (e.g.\n\t\t// `<MyJSONFormatter>{{ foo: 123, bar: \"abc\" }}</MyJSONFormatter>`).\n\t\t// Putting this check in `options.diffed` ensures that\n\t\t// `vnode._children` is set and that we only validate the children\n\t\t// that were actually rendered.\n\t\tif (vnode._children) {\n\t\t\tvnode._children.forEach(child => {\n\t\t\t\tif (child && child.type === undefined) {\n\t\t\t\t\t// Remove internal vnode keys that will always be patched\n\t\t\t\t\tdelete child._parent;\n\t\t\t\t\tdelete child._depth;\n\t\t\t\t\tconst keys = Object.keys(child).join(',');\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Objects are not valid as a child. Encountered an object with the keys {${keys}}.` +\n\t\t\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\thooksAllowed = false;\n\n\t\tif (oldDiffed) oldDiffed(vnode);\n\n\t\tif (vnode._children != null) {\n\t\t\tconst keys = [];\n\t\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\t\tconst child = vnode._children[i];\n\t\t\t\tif (!child || child.key == null) continue;\n\n\t\t\t\tconst key = child.key;\n\t\t\t\tif (keys.indexOf(key) !== -1) {\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'Following component has two or more children with the ' +\n\t\t\t\t\t\t\t`same key attribute: \"${key}\". This may cause glitches and misbehavior ` +\n\t\t\t\t\t\t\t'in rendering process. Component: \\n\\n' +\n\t\t\t\t\t\t\tserializeVNode(vnode) +\n\t\t\t\t\t\t\t`\\n\\n${getOwnerStack(vnode)}`\n\t\t\t\t\t);\n\n\t\t\t\t\t// Break early to not spam the console\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tkeys.push(key);\n\t\t\t}\n\t\t}\n\t};\n}\n\nconst setState = Component.prototype.setState;\nComponent.prototype.setState = function(update, callback) {\n\tif (this._vnode == null) {\n\t\t// `this._vnode` will be `null` during componentWillMount. But it\n\t\t// is perfectly valid to call `setState` during cWM. So we\n\t\t// need an additional check to verify that we are dealing with a\n\t\t// call inside constructor.\n\t\tif (this.state == null) {\n\t\t\tconsole.warn(\n\t\t\t\t`Calling \"this.setState\" inside the constructor of a component is a ` +\n\t\t\t\t\t`no-op and might be a bug in your application. Instead, set ` +\n\t\t\t\t\t`\"this.state = {}\" directly.\\n\\n${getOwnerStack(getCurrentVNode())}`\n\t\t\t);\n\t\t}\n\t} else if (this._parentDom == null) {\n\t\tconsole.warn(\n\t\t\t`Can't call \"this.setState\" on an unmounted component. This is a no-op, ` +\n\t\t\t\t`but it indicates a memory leak in your application. To fix, cancel all ` +\n\t\t\t\t`subscriptions and asynchronous tasks in the componentWillUnmount method.` +\n\t\t\t\t`\\n\\n${getOwnerStack(this._vnode)}`\n\t\t);\n\t}\n\n\treturn setState.call(this, update, callback);\n};\n\nconst forceUpdate = Component.prototype.forceUpdate;\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode == null) {\n\t\tconsole.warn(\n\t\t\t`Calling \"this.forceUpdate\" inside the constructor of a component is a ` +\n\t\t\t\t`no-op and might be a bug in your application.\\n\\n${getOwnerStack(\n\t\t\t\t\tgetCurrentVNode()\n\t\t\t\t)}`\n\t\t);\n\t} else if (this._parentDom == null) {\n\t\tconsole.warn(\n\t\t\t`Can't call \"this.forceUpdate\" on an unmounted component. This is a no-op, ` +\n\t\t\t\t`but it indicates a memory leak in your application. To fix, cancel all ` +\n\t\t\t\t`subscriptions and asynchronous tasks in the componentWillUnmount method.` +\n\t\t\t\t`\\n\\n${getOwnerStack(this._vnode)}`\n\t\t);\n\t}\n\treturn forceUpdate.call(this, callback);\n};\n\n/**\n * Serialize a vnode tree to a string\n * @param {import('./internal').VNode} vnode\n * @returns {string}\n */\nexport function serializeVNode(vnode) {\n\tlet { props } = vnode;\n\tlet name = getDisplayName(vnode);\n\n\tlet attrs = '';\n\tfor (let prop in props) {\n\t\tif (props.hasOwnProperty(prop) && prop !== 'children') {\n\t\t\tlet value = props[prop];\n\n\t\t\t// If it is an object but doesn't have toString(), use Object.toString\n\t\t\tif (typeof value == 'function') {\n\t\t\t\tvalue = `function ${value.displayName || value.name}() {}`;\n\t\t\t}\n\n\t\t\tvalue =\n\t\t\t\tObject(value) === value && !value.toString\n\t\t\t\t\t? Object.prototype.toString.call(value)\n\t\t\t\t\t: value + '';\n\n\t\t\tattrs += ` ${prop}=${JSON.stringify(value)}`;\n\t\t}\n\t}\n\n\tlet children = props.children;\n\treturn `<${name}${attrs}${\n\t\tchildren && children.length ? '>..</' + name + '>' : ' />'\n\t}`;\n}\n","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n/**\n * Keep track of the previous component so that we can set\n * `currentComponent` to `null` and throw when a hook is invoked\n * outside of render\n * @type {import('./internal').Component}\n */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\thooks._pendingEffects = [];\n\t}\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks && c.__hooks._pendingEffects.length) {\n\t\tafterPaint(afterPaintEffects.push(c));\n\t}\n\tcurrentComponent = previousComponent;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\ttry {\n\t\t\tc.__hooks._list.forEach(invokeCleanup);\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst nextValue = hookState._reducer(hookState._value[0], action);\n\t\t\t\tif (hookState._value[0] !== nextValue) {\n\t\t\t\t\thookState._value = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\t}\n\n\treturn hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') ref(createHandle());\n\t\t\telse if (ref) ref.current = createHandle();\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tafterPaintEffects.forEach(component => {\n\t\tif (component._parentDom) {\n\t\t\ttry {\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t} catch (e) {\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t\toptions._catchError(e, component._vnode);\n\t\t\t}\n\t\t}\n\t});\n\tafterPaintEffects = [];\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tif (typeof hook._cleanup == 'function') hook._cleanup();\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","import { options, Fragment, Component } from 'preact';\n\nexport function initDevTools() {\n\tif (typeof window != 'undefined' && window.__PREACT_DEVTOOLS__) {\n\t\twindow.__PREACT_DEVTOOLS__.attachPreact('10.5.12', options, {\n\t\t\tFragment,\n\t\t\tComponent\n\t\t});\n\t}\n}\n","const ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nlet loggedTypeFailures = {};\n\n/**\n * Reset the history of which prop type warnings have been logged.\n */\nexport function resetPropWarnings() {\n\tloggedTypeFailures = {};\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * Adapted from https://github.com/facebook/prop-types/blob/master/checkPropTypes.js\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n */\nexport function checkPropTypes(\n\ttypeSpecs,\n\tvalues,\n\tlocation,\n\tcomponentName,\n\tgetStack\n) {\n\tObject.keys(typeSpecs).forEach(typeSpecName => {\n\t\tlet error;\n\t\ttry {\n\t\t\terror = typeSpecs[typeSpecName](\n\t\t\t\tvalues,\n\t\t\t\ttypeSpecName,\n\t\t\t\tcomponentName,\n\t\t\t\tlocation,\n\t\t\t\tnull,\n\t\t\t\tReactPropTypesSecret\n\t\t\t);\n\t\t} catch (e) {\n\t\t\terror = e;\n\t\t}\n\t\tif (error && !(error.message in loggedTypeFailures)) {\n\t\t\tloggedTypeFailures[error.message] = true;\n\t\t\tconsole.error(\n\t\t\t\t`Failed ${location} type: ${error.message}${(getStack &&\n\t\t\t\t\t`\\n${getStack()}`) ||\n\t\t\t\t\t''}`\n\t\t\t);\n\t\t}\n\t});\n}\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n","import \"preact/debug\";\nimport { h } from \"preact\";\nimport { useState, useEffect } from \"preact/hooks\";\n\nconst Settings = (props) => {\n  const [bg, setBg] = useState(\"\");\n  const [colour, setColour] = useState(\"\");\n  const [font, fontSize] = useState(30);\n  useEffect(() => {\n    let localBg = localStorage.getItem(\"bg\");\n    let localColour = localStorage.getItem(\"colour\");\n    let localFont = localStorage.getItem(\"fontSize\");\n    setBg(localBg);\n    setColour(localColour);\n    document.body.style.backgroundColor = `${localBg}`;\n    document.body.style.color = `${localColour}`;\n    document.querySelector(\".container\").style.fontSize = `${localFont}px`;\n  }, []);\n\n  const handleBg = (e) => {\n    setBg(e.target.value);\n  };\n  const handleColour = (e) => {\n    setColour(e.target.value);\n  };\n\n  const handleFontSize = (e) => {\n    fontSize(+e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    document.body.style.backgroundColor = `${bg}`;\n    document.body.style.color = `${colour}`;\n    document.querySelector(\".container\").style.fontSize = `${font}px`;\n    localStorage.setItem(\"bg\", bg);\n    localStorage.setItem(\"colour\", colour);\n    localStorage.setItem(\"fontSize\", fontSize);\n  };\n  return (\n    <div className={`settings ${props.isOpen ? \"open\" : \"close\"}`}>\n      <form>\n        <label>Set background colour</label>\n        <input\n          name=\"backgroundColor\"\n          type=\"text\"\n          value={bg}\n          onChange={(e) => handleBg(e)}\n        />\n        <label>Set font size</label>\n        <input\n          name=\"fontSize\"\n          type=\"text\"\n          value={font}\n          onChange={(e) => handleFontSize(e)}\n        />\n        <label>Set font colour</label>\n        <input\n          name=\"color\"\n          type=\"text\"\n          value={colour}\n          onChange={(e) => handleColour(e)}\n        />\n        <button onClick={handleSubmit}>Apply</button>\n      </form>\n      <h4>\n        <b>\n          Clear localStorage, remove current lines so they don't show up aftre\n          reloading\n        </b>\n      </h4>\n      <button onClick={() => props.clear()}>Clear</button>\n    </div>\n  );\n};\n\nexport default Settings;\n","import \"./style\";\nimport App from \"./app\";\n\nexport default App;\n","import \"preact/debug\";\nimport { h } from \"preact\";\nimport { useState, useEffect } from \"preact/hooks\";\nimport Settings from \"./components/settings\";\nconst App = () => {\n  if (typeof window != \"undefined\") {\n    const [charCount, setCharCount] = useState(0);\n    const [lineCount, setLineCount] = useState(0);\n    const [data, setData] = useState([]);\n    const [open, toggle] = useState(false);\n    localStorage.text = JSON.stringify({ lines: [] });\n    let lines = JSON.parse(localStorage.text).lines;\n    let linesData;\n    useEffect(() => {\n      const container = document.querySelector(\".container\");\n      const config = { childList: true, attributes: false };\n      console.log(\"useEffect initiated!!!\");\n      loadLines(container);\n      const callback = (mutations) => {\n        for (const mutation of mutations) {\n          let _lines = lineCount;\n          console.log(lines);\n          let text =\n            mutation.addedNodes[_lines ? _lines - 1 : _lines].innerText;\n          lines.push(text);\n          updateData(text);\n          console.log(lines);\n          localStorage.setItem(\"lines\", lines);\n          console.log(JSON.parse(localStorage.text).lines);\n          console.log(sessionStorage.text);\n          console.log(mutation);\n          console.log(text);\n          setLineCount((count) => count + 1);\n          console.log(lineCount);\n          setCharCount((count) => count + text.length);\n          console.log(text);\n          scroll();\n        }\n      };\n      const observer = new MutationObserver(callback);\n      observer.observe(container, config);\n    }, []);\n\n    const removeLine = () => {\n      console.log(lineCount);\n      let lastP = Array.from(document.querySelectorAll(\".container p\")).pop();\n      console.log(lineCount ? lineCount - 1 : lineCount);\n      console.log(lastP);\n      lastP.remove();\n      const linesData = localStorage.getItem(\"lines\").split(\",\");\n      localStorage.setItem(\"lines\", removeLastElementArray(linesData));\n      setData((data) => removeLastElementArray(data));\n      setCharCount((count) => count - lastP.innerText.length);\n      setLineCount((count) => count - 1);\n    };\n\n    const removeLastElementArray = (arr) => {\n      arr.pop();\n      return arr;\n    };\n\n    const loadLines = (container) => {\n      linesData = localStorage.getItem(\"lines\").split(\",\");\n      setData(linesData);\n      console.log(linesData);\n      for (const i of linesData) {\n        const line = document.createElement(\"p\");\n        let t = document.createTextNode(`${i}`);\n        setLineCount((line) => line + 1);\n        setCharCount((chars) => chars + i.length);\n        console.log(i);\n        line.appendChild(t);\n        container.appendChild(line);\n      }\n    };\n\n    const updateData = (text) => {\n      setData((data) => [...data, text]);\n    };\n    const clearLocalStorage = () => {\n      localStorage.setItem(\"lines\", []);\n      setData([]);\n    };\n\n    const scroll = () => {\n      // Copied that from another code, it does the job so no need to change it.\n\n      const LEEWAY = 200; // Amount of \"leeway\" pixels before latching onto the bottom.\n\n      // Some obscene browser shit because making sense is for dweebs\n      let b = document.body;\n      let offset = b.scrollHeight - b.offsetHeight;\n      let scrollPos = b.scrollTop + offset;\n      let scrollBottom = b.scrollHeight - (b.clientHeight + offset);\n\n      // iF WE ARE AT The bottom, go to the bottom again.\n      if (scrollPos >= scrollBottom - LEEWAY) {\n        window.scrollTo(0, document.body.scrollHeight);\n      }\n    };\n\n    return (\n      <div className=\"app\">\n        <div className=\"remove\">\n          <span className=\"chars\" onClick={removeLine}>\n            {charCount} / {lineCount}\n          </span>\n          <span className=\"button\">x</span>\n        </div>\n        <div className=\"settingsToggle\" onClick={() => toggle((t) => !t)}>\n          <span></span>\n          <span></span>\n          <span></span>\n        </div>\n        <div className=\"container\"></div>\n        <Settings clear={clearLocalStorage} isOpen={open} />\n      </div>\n    );\n  }\n};\n\nexport default App;\n","import options from './options';\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 3) {\n\t\tchildren = [children];\n\t\t// https://github.com/preactjs/preact/issues/1916\n\t\tfor (i = 3; i < arguments.length; i++) {\n\t\t\tchildren.push(arguments[i]);\n\t\t}\n\t}\n\tif (children != null) {\n\t\tnormalizedProps.children = children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++options._vnodeId : original\n\t};\n\n\tif (options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb: () => void) => void}\n */\n/* istanbul ignore next */\n// Note the following line isn't tree-shaken by rollup cuz of rollup/rollup#2566\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\nprocess._rerenderCount = 0;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (typeof childVNode == 'string' || typeof childVNode == 'number') {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tnull,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children != null && // Can be null if childVNode suspended\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Browsers will infer an option's `value` from `textContent` when\n\t\t\t// no value is present. This essentially bypasses our code to set it\n\t\t\t// later in `diff()`. It works fine in all browsers except for IE11\n\t\t\t// where it breaks setting `select.value`. There it will be always set\n\t\t\t// to an empty string. Re-applying an options value will fix that, so\n\t\t\t// there are probably some internal data structures that aren't\n\t\t\t// updated properly.\n\t\t\t//\n\t\t\t// To fix it we make sure to reset the inferred value, so that our own\n\t\t\t// value check in `diff()` won't be skipped.\n\t\t\tif (!isHydrating && newParentVNode.type === 'option') {\n\t\t\t\t// @ts-ignore We have validated that the type of parentDOM is 'option'\n\t\t\t\t// in the above check\n\t\t\t\tparentDom.value = '';\n\t\t\t} else if (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldParentVNode, i + 1);\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\tfor (let tmp = 0; tmp < childVNode._children.length; tmp++) {\n\t\tlet vnode = childVNode._children[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tvnode,\n\t\t\t\t\tvnode,\n\t\t\t\t\tchildVNode._children,\n\t\t\t\t\tvnode._dom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 2\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink[H:h]/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (\n\t\t\tvalue != null &&\n\t\t\t(value !== false || (name[0] === 'a' && name[1] === 'r'))\n\t\t) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { Component } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif ((tmp = options._render)) tmp(newVNode);\n\n\t\t\tc._dirty = false;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t(child === dom ||\n\t\t\t\t\t(nodeType ? child.localName == nodeType : child.nodeType == 3))\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren =\n\t\t\texcessDomChildren && EMPTY_ARR.slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (let i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tdom.firstChild,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value || (nodeType === 'progress' && !i))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) applyRef(r, null, parentVNode);\n\t}\n\n\tlet dom;\n\tif (!skipRemove && typeof vnode.type != 'function') {\n\t\tskipRemove = (dom = vnode._dom) != null;\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._dom = vnode._nextDom = undefined;\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) unmount(r[i], parentVNode, skipRemove);\n\t\t}\n\t}\n\n\tif (dom != null) removeNode(dom);\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? EMPTY_ARR.slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError,\n\t_vnodeId: 0\n};\n\nexport default options;\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n */\nexport function _catchError(error, vnode) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error);\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","/* global __webpack_public_path__ */\n\nimport * as Preact from 'preact';\nconst { h, render, hydrate } = Preact;\n\nconst interopDefault = m => (m && m.default ? m.default : m);\n\nconst normalizeURL = url => (url[url.length - 1] === '/' ? url : url + '/');\n\nif (process.env.NODE_ENV === 'development') {\n\t// enable preact devtools\n\trequire('preact/debug');\n\n\t// only add a debug sw if webpack service worker is not requested.\n\tif (process.env.ADD_SW === undefined && 'serviceWorker' in navigator) {\n\t\t// eslint-disable-next-line no-undef\n\t\tnavigator.serviceWorker.register(__webpack_public_path__ + 'sw-debug.js');\n\t} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\t\t// eslint-disable-next-line no-undef\n\t\tnavigator.serviceWorker.register(\n\t\t\t__webpack_public_path__ + (process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t\t);\n\t}\n} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\t// eslint-disable-next-line no-undef\n\tnavigator.serviceWorker.register(\n\t\t__webpack_public_path__ + (process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t);\n}\n\nlet app = interopDefault(require('preact-cli-entrypoint'));\n\nif (typeof app === 'function') {\n\tlet root =\n\t\tdocument.getElementById('preact_root') || document.body.firstElementChild;\n\n\tlet init = () => {\n\t\tlet app = interopDefault(require('preact-cli-entrypoint'));\n\t\tlet preRenderData = {};\n\t\tconst inlineDataElement = document.querySelector(\n\t\t\t'[type=\"__PREACT_CLI_DATA__\"]'\n\t\t);\n\t\tif (inlineDataElement) {\n\t\t\tpreRenderData =\n\t\t\t\tJSON.parse(decodeURI(inlineDataElement.innerHTML)).preRenderData ||\n\t\t\t\tpreRenderData;\n\t\t}\n\t\t/* An object named CLI_DATA is passed as a prop,\n\t\t * this keeps us future proof if in case we decide,\n\t\t * to send other data like at some point in time.\n\t\t */\n\t\tconst CLI_DATA = { preRenderData };\n\t\tconst currentURL = preRenderData.url ? normalizeURL(preRenderData.url) : '';\n\t\tconst canHydrate =\n\t\t\tprocess.env.PRERENDER &&\n\t\t\tprocess.env.NODE_ENV === 'production' &&\n\t\t\thydrate &&\n\t\t\tcurrentURL === normalizeURL(location.pathname);\n\t\tconst doRender = canHydrate ? hydrate : render;\n\t\troot = doRender(h(app, { CLI_DATA }), document.body, root);\n\t};\n\n\tif (module.hot) module.hot.accept('preact-cli-entrypoint', init);\n\n\tinit();\n}\n"],"sourceRoot":""}